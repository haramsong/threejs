{
	// Place your threejs workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Control": {
		"scope": "javascript",
		"prefix": "jsmctl",
		"body": [
			"three/examples/jsm/controls/",
		],
		"description": "Control import path"
	},
	"Loader": {
		"scope": "javascript",
		"prefix": "jsmld",
		"body": [
			"three/examples/jsm/loaders/",
		],
		"description": "Loaders import path"
	},
	"Geometries": {
		"scope": "javascript",
		"prefix": "jsmgeo",
		"body": [
			"three/examples/jsm/geometries/",
		],
		"description": "Geometries import path"
	},
	"Postprocessing": {
		"scope": "javascript",
		"prefix": "jsmpost",
		"body": [
			"three/examples/jsm/postprocessing/",
		],
		"description": "Postprocessing import path"
	},
	"Import OrbitControl": {
		"scope": "javascript",
		"prefix": "imporbit",
		"body": [
			"import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';",
		],
		"description": "import Orbit controls"
	},
	"Controls": {
		"scope": "javascript",
		"prefix": "controls",
		"body": [
			"const controls = new OrbitControls(camera, renderer.domElement);",
		],
		"description": "Orbit controls set controls var"
	},
	"Scene": {
		"scope": "javascript",
		"prefix": "scene",
		"body": [
			"const scene = new THREE.Scene();",
		],
		"description": "Scene set scene var"
	},
}